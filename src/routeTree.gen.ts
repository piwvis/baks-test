// This file is auto-generated by TanStack Router

import { FileRoute, lazyRouteComponent } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShopImport } from './routes/shop'
import { Route as ClanImport } from './routes/clan'
import { Route as UserTokenImport } from './routes/$userToken'
import { Route as ShopIndexImport } from './routes/shop.index'
import { Route as ClanIndexImport } from './routes/clan.index'
import { Route as ShopItemIdImport } from './routes/shop.$itemId'
import { Route as ClanClanIdImport } from './routes/clan.$clanId'

// Create Virtual Routes

const InviteComponentImport = new FileRoute('/invite').createRoute()
const GiftComponentImport = new FileRoute('/gift').createRoute()
const IndexComponentImport = new FileRoute('/').createRoute()

// Create/Update Routes

const InviteComponentRoute = InviteComponentImport.update({
  path: '/invite',
  getParentRoute: () => rootRoute,
} as any).update({
  component: lazyRouteComponent(
    () => import('./routes/invite.component'),
    'component',
  ),
})

const GiftComponentRoute = GiftComponentImport.update({
  path: '/gift',
  getParentRoute: () => rootRoute,
} as any).update({
  component: lazyRouteComponent(
    () => import('./routes/gift.component'),
    'component',
  ),
})

const ShopRoute = ShopImport.update({
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any)

const ClanRoute = ClanImport.update({
  path: '/clan',
  getParentRoute: () => rootRoute,
} as any)

const UserTokenRoute = UserTokenImport.update({
  path: '/$userToken',
  getParentRoute: () => rootRoute,
} as any)

const IndexComponentRoute = IndexComponentImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).update({
  component: lazyRouteComponent(
    () => import('./routes/index.component'),
    'component',
  ),
})

const ShopIndexRoute = ShopIndexImport.update({
  path: '/',
  getParentRoute: () => ShopRoute,
} as any)

const ClanIndexRoute = ClanIndexImport.update({
  path: '/',
  getParentRoute: () => ClanRoute,
} as any)

const ShopItemIdRoute = ShopItemIdImport.update({
  path: '/$itemId',
  getParentRoute: () => ShopRoute,
} as any)

const ClanClanIdRoute = ClanClanIdImport.update({
  path: '/$clanId',
  getParentRoute: () => ClanRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexComponentImport
      parentRoute: typeof rootRoute
    }
    '/$userToken': {
      preLoaderRoute: typeof UserTokenImport
      parentRoute: typeof rootRoute
    }
    '/clan': {
      preLoaderRoute: typeof ClanImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      preLoaderRoute: typeof ShopImport
      parentRoute: typeof rootRoute
    }
    '/gift': {
      preLoaderRoute: typeof GiftComponentImport
      parentRoute: typeof rootRoute
    }
    '/invite': {
      preLoaderRoute: typeof InviteComponentImport
      parentRoute: typeof rootRoute
    }
    '/clan/$clanId': {
      preLoaderRoute: typeof ClanClanIdImport
      parentRoute: typeof ClanImport
    }
    '/shop/$itemId': {
      preLoaderRoute: typeof ShopItemIdImport
      parentRoute: typeof ShopImport
    }
    '/clan/': {
      preLoaderRoute: typeof ClanIndexImport
      parentRoute: typeof ClanImport
    }
    '/shop/': {
      preLoaderRoute: typeof ShopIndexImport
      parentRoute: typeof ShopImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexComponentRoute,
  UserTokenRoute,
  ClanRoute.addChildren([ClanClanIdRoute, ClanIndexRoute]),
  ShopRoute.addChildren([ShopItemIdRoute, ShopIndexRoute]),
  GiftComponentRoute,
  InviteComponentRoute,
])
